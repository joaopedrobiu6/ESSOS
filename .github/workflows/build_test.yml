name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: [ '3.9', '3.10', '3.11', '3.12']
    name: Python ${{ matrix.python-version }} Test

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install ESSOS
      run: |
        python -m pip install --upgrade pip
        pip install .
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest coverage pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude=examples_old
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --exclude=examples_old

    - name: Run tests with coverage
      if: matrix.python-version == '3.12'
      run: |
        pip install coverage
        coverage run --source=essos -m pytest .
        coverage report
        coverage xml

    # - name: Upload coverage to github
    #   if: matrix.python-version == '3.12'
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: tox-gh-actions-coverage
    #     path: coverage.xml
    #     if-no-files-found: error

    - name: Upload coverage reports to Codecov
      if: github.repository_owner == 'uwplasma' && matrix.python-version == '3.12'
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        flags: unittests
        env_vars: PYTHON
        name: codecov-umbrella
        fail_ci_if_error: true
        verbose: true